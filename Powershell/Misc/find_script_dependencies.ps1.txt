# Purpose: Find files which have dependencies on another script
# Author: Heath Gilham
# Logic:  Find all files (excluding log files) which contain the relevant script name and output to a file
# Instructions: 1. Right click this file and choose "Run with Powershell"
#               2. Use text file with list of files


# Setup functions
function Log($Text) {
    $Timestamp = Get-Date -format "dd-MM-yyyy hh:mm:sstt"
	$Text = ($Timestamp + " " + $Text)
    Write-Host $Text
    Add-content $LogFile -value $Text
}


# Setup variables
$StartTime = Get-Date 
$CurrentFolder = Get-Location
$Datetime = Get-Date -format "ddMMyyyy_hhmmtt"
$Date = (Get-Date -format "dd-MM-yyyy")
$LogFolderName = "Log"
$LogFileName = "$Date.log"
$LogFolder = "$CurrentFolder\$LogFolderName"
$LogFile = "$LogFolder\$LogFileName"
$OutputFile = "$CurrentFolder\files_found.txt"
$IsDebuggingMode = $false
If(!(test-path "$LogFolder")){New-Item -Path $CurrentFolder -Name $LogFolderName -ItemType "directory" | Out-Null}
If(!(test-path "$LogFile")){New-Item -Path $LogFolder -Name $LogFileName -ItemType "file" -Value "" | Out-Null}
Remove-Item -Path $OutputFile -ErrorAction Ignore

$ScriptNameToSearch = "myscript.ps1"
$FolderToSearch = "C:\Users\heath\myscripts\"

Log("---------------------Running " + $myInvocation.MyCommand.Path + "---------------------")

Log("---------------------Part 1: Starting ---------------------")

$FilesInCurrentFolder = Get-ChildItem -Path $FolderToSearch -Recurse -Exclude "*.log" | Select-String $ScriptNameToSearch -List | Select Path

Log("Adding file list to " + $OutputFile)

foreach($File in $FilesInCurrentFolder){
    Add-content $OutputFile -value $File.Path
}

Log("---------------------Part 1: Completed ---------------------")


Log("---------------------Completed " + $myInvocation.MyCommand.Path + "---------------------")

$EndTime = Get-Date 
Log ("Time Taken: " + ($EndTime - $StartTime))

# Pause to see the output of the run
pause
